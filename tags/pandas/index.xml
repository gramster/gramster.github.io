<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Pandas on Graham Wheeler's Random Forest</title><link>http://www.grahamwheeler.com/tags/pandas/</link><description>Recent content in Pandas on Graham Wheeler's Random Forest</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 29 Apr 2018 16:40:00 +0000</lastBuildDate><atom:link href="http://www.grahamwheeler.com/tags/pandas/index.xml" rel="self" type="application/rss+xml"/><item><title>Basic Machine Learning with SciKit-Learn</title><link>http://www.grahamwheeler.com/post/basic-machine-learning/</link><pubDate>Sun, 29 Apr 2018 16:40:00 +0000</pubDate><guid>http://www.grahamwheeler.com/post/basic-machine-learning/</guid><description>This is the fourth post in a series based off my [Python for Data Science bootcamp]((https://github.com/gramster/pythonbootcamp) I run at eBay occasionally. The other posts are:
a Python crash course using Jupyter exploratory data analysis. In this post we will look into the basics of building ML models with Scikit-Learn. Scikit-Learn is the most widely used Python library for ML, especially outside of deep learning (where there are several contenders and I recommend using Keras, which is a package that provides a simple API on top of several underlying contenders like TensorFlow and PyTorch).</description></item><item><title>Exploratory Data Analysis with NumPy and Pandas</title><link>http://www.grahamwheeler.com/post/exploratory-data-analysis-with-numpy-and-pandas/</link><pubDate>Sat, 28 Apr 2018 12:40:00 +0000</pubDate><guid>http://www.grahamwheeler.com/post/exploratory-data-analysis-with-numpy-and-pandas/</guid><description>This is the third post in a series based off my Python for Data Science bootcamp I run at eBay occasionally. The other posts are:
a Python crash course using Jupyter introductory machine learning. This is an introduction to the NumPy and Pandas libraries that form the foundation of data science in Python. These libraries, especially Pandas, have a large API surface and many powerful features. There is now way in a short amount of time to cover every topic; in many cases we will just scratch the surface.</description></item></channel></rss>